openapi: "3.1.0"
info:
  title: "api API"
  description: "api API"
  version: "1.0.0"
servers:
- url: "https://api"
paths:
  /api:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
  /api/form:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FormEntity"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
  /json/gson:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Map_String"
  /html-css-dsl:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Function1_? super HTML"
              examples:
                text/html:
                  description: "HTML document"
                  value: ""
  /html-dsl:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Function1_? super HTML"
              examples:
                text/html:
                  description: "HTML document"
                  value: ""
  /styles.css:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/css:
              schema:
                type: "string"
components:
  schemas:
    FormEntity:
      type: "object"
      properties:
        fullname:
          type: "string"
        email:
          type: "string"
        dateTime:
          type: "string"
        personsCount:
          type: "integer"
          format: "int32"
        wishes:
          type: "string"
    Map:
      type: "object"
      properties: {}
    Map_String:
      type: "string"
    Function1:
      type: "object"
      properties: {}
    Function1_? super HTML:
      type: "object"